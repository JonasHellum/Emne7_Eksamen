{"Timestamp":"2024-12-17T02:46:27.4735440+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"95a8bb6a847705b2657adea4dc624375","SpanId":"c7bef7993327d455","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U7HO2SGD7:00000005","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8U7HO2SGD7"}}
{"Timestamp":"2024-12-17T02:46:28.9345502+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"95a8bb6a847705b2657adea4dc624375","SpanId":"c7bef7993327d455","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","ActionId":"5c423f4f-eae2-46b9-9484-387d880b5a67","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8U7HO2SGD7:00000005","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8U7HO2SGD7"}}
{"Timestamp":"2024-12-17T02:46:28.9377988+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"95a8bb6a847705b2657adea4dc624375","SpanId":"c7bef7993327d455","Properties":{"LoggedInMemberId":"5","SourceContext":"Emne7_Eksamen.Features.Members.MemberService","ActionId":"5c423f4f-eae2-46b9-9484-387d880b5a67","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8U7HO2SGD7:00000005","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8U7HO2SGD7"}}
{"Timestamp":"2024-12-17T02:46:28.9382472+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"95a8bb6a847705b2657adea4dc624375","SpanId":"c7bef7993327d455","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"5c423f4f-eae2-46b9-9484-387d880b5a67","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8U7HO2SGD7:00000005","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8U7HO2SGD7"}}
{"Timestamp":"2024-12-17T03:06:39.0890408+01:00","Level":"Warning","MessageTemplate":"Authentication header is empty","TraceId":"90a984c904158b169a55df79601de06f","SpanId":"000748f0217879e9","Properties":{"SourceContext":"Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication","RequestId":"0HN8U7SRSKOCD:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U7SRSKOCD"}}
{"Timestamp":"2024-12-17T03:06:39.1185680+01:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","TraceId":"90a984c904158b169a55df79601de06f","SpanId":"000748f0217879e9","Exception":"System.UnauthorizedAccessException: Authentication header is empty\r\n   at Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Middleware\\GokstadAthleticsBasicAuthentication.cs:line 42\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN8U7SRSKOCD:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U7SRSKOCD"}}
{"Timestamp":"2024-12-17T03:06:54.3833064+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"31973433724d1f9dd63cc3f06e9a9a90","SpanId":"0b1b06f3a4d48f3a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U7SRSKOCD:00000009","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U7SRSKOCD"}}
{"Timestamp":"2024-12-17T03:06:54.8256216+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"31973433724d1f9dd63cc3f06e9a9a90","SpanId":"0b1b06f3a4d48f3a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"17932198-8b13-4863-b201-38cd44790884","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U7SRSKOCD:00000009","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U7SRSKOCD"}}
{"Timestamp":"2024-12-17T03:06:54.8300471+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"31973433724d1f9dd63cc3f06e9a9a90","SpanId":"0b1b06f3a4d48f3a","Properties":{"LoggedInMemberId":"5","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"17932198-8b13-4863-b201-38cd44790884","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U7SRSKOCD:00000009","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U7SRSKOCD"}}
{"Timestamp":"2024-12-17T03:06:54.8308379+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"31973433724d1f9dd63cc3f06e9a9a90","SpanId":"0b1b06f3a4d48f3a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"17932198-8b13-4863-b201-38cd44790884","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U7SRSKOCD:00000009","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U7SRSKOCD"}}
{"Timestamp":"2024-12-17T03:06:54.8650242+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 0, FirstName: 05/29/2025 00:00:00, LastName: 100","TraceId":"31973433724d1f9dd63cc3f06e9a9a90","SpanId":"0b1b06f3a4d48f3a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"17932198-8b13-4863-b201-38cd44790884","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U7SRSKOCD:00000009","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U7SRSKOCD"}}
{"Timestamp":"2024-12-17T03:07:30.9001798+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse r.Date.ToString(\"yyyy-MM-dd\").Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.Value.ToString(\"yyyy-MM-dd\")))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"57bb4d699f07a35739625a030995a11e","SpanId":"8d93e4d8310f004e","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"facf8433-85e3-4056-b2b1-a45e85397f3f","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U7SRSKOCD:0000000D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U7SRSKOCD"}}
{"Timestamp":"2024-12-17T03:25:22.4020935+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse r.Date.ToString(\"yyyy-MM-dd\").Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.Value.ToString(\"yyyy-MM-dd\")))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"627854dbec83b4200eabf19cccd82502","SpanId":"afd0343ec80ad8c5","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"23302fba-e153-43a2-9d41-2ad838842ea8","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U886H870V:00000005","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U886H870V"}}
{"Timestamp":"2024-12-17T03:25:23.3733170+01:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","TraceId":"627854dbec83b4200eabf19cccd82502","SpanId":"afd0343ec80ad8c5","Exception":"System.InvalidOperationException: The LINQ expression 'DbSet<Race>()\r\n    .Where(r => True && False || r.Date.ToString(\"yyyy-MM-dd\").Contains(__ToString_0) && False || r.Distance.ToString().Contains(__ToString_1))' could not be translated. Additional information: Translation of method 'System.DateTime.ToString' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.Translate(Expression expression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.Translate(Expression expression)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass12_0`1.<ExecuteAsync>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync[TResult](Expression query, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetAsyncEnumerator(CancellationToken cancellationToken)\r\n   at System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.GetAsyncEnumerator()\r\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)\r\n   at Emne7_Eksamen.Features.Races.RaceRepository.FindAsync(Expression`1 predicate) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Features\\Races\\RaceRepository.cs:line 64\r\n   at Emne7_Eksamen.Features.Races.RaceService.FindAsync(RaceSearchParams searchParams) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Features\\Races\\RaceService.cs:line 167\r\n   at Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync(RaceSearchParams searchParams, Int32 pageNumber, Int32 pageSize) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Features\\Races\\RaceController.cs:line 46\r\n   at lambda_method8(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Middleware\\GokstadAthleticsBasicAuthentication.cs:line 33\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN8U886H870V:00000005","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U886H870V"}}
{"Timestamp":"2024-12-17T03:35:20.9944354+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"c05ca368d5cf9617cf293e1e329e74e9","SpanId":"4197ac0b3111897c","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"f698f192-76cf-4d19-94f4-f1fce45b128f","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8DOFAJ59:00000005","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8DOFAJ59"}}
{"Timestamp":"2024-12-17T03:41:42.3090637+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"f8e18b25955354ecb92390fea1a3562e","SpanId":"aaab824f2b4b7609","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"f698f192-76cf-4d19-94f4-f1fce45b128f","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8DOFAJ5A:00000015","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8DOFAJ5A"}}
{"Timestamp":"2024-12-17T03:48:22.5574187+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"36a1a6fa2a7d2c968a6961152321c7ca","SpanId":"d924bc75b92bbf61","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"6f0500cf-2c7a-4ba0-8970-d18f4f07c5b8","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8KMRV01B:00000007","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8KMRV01B"}}
{"Timestamp":"2024-12-17T04:02:54.6368436+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"4832b390c475f5479e6413117afc20de","SpanId":"d4a0c4310ba4cbfd","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c019f9cd-21af-4b44-b0f3-ef8e87789070","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8SR8PVCV:0000000B","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:03:01.2709690+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"653f8e4db3ddb5003ab7f74c825982b4","SpanId":"ab0598b1c83a96d0","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c019f9cd-21af-4b44-b0f3-ef8e87789070","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8SR8PVCV:0000000D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:03:07.4802929+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"4d7d2d59ebf3bb136c96f63aa0440d3c","SpanId":"8c9f8ee53c26de20","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c019f9cd-21af-4b44-b0f3-ef8e87789070","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8SR8PVCV:0000000F","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:03:11.8714656+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"48e46a57cb97e01a99c0fe6fc24005ee","SpanId":"67cb0e608a0cd1d9","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c019f9cd-21af-4b44-b0f3-ef8e87789070","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8SR8PVCV:00000011","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:03:15.8085849+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"bc4f10ffd3b9ee72c9f182943e7c4c5b","SpanId":"0b93463e763484e8","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c019f9cd-21af-4b44-b0f3-ef8e87789070","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8SR8PVCV:00000013","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:03:18.4755594+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"11e9094a64e25b9abff3a7beb0c7da53","SpanId":"2277089ecfc3eeb1","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c019f9cd-21af-4b44-b0f3-ef8e87789070","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8SR8PVCV:00000015","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:03:20.4610307+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"6de897b5d5cb1c2bf05da3ae5da3b825","SpanId":"0ff985208dd59005","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c019f9cd-21af-4b44-b0f3-ef8e87789070","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8SR8PVCV:00000017","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:03:41.6101873+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"50dfa4be617b9f45b0303b22903f5388","SpanId":"5a35dd12b233aaea","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c019f9cd-21af-4b44-b0f3-ef8e87789070","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8SR8PVCV:00000019","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:03:45.0242648+01:00","Level":"Information","MessageTemplate":"Trying to find: r => (((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"2b896a7a6121c1fc190301642ed83ca1","SpanId":"3d1905cfa83bb3a7","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c019f9cd-21af-4b44-b0f3-ef8e87789070","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U8SR8PVCV:0000001B","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:04:11.4200350+01:00","Level":"Warning","MessageTemplate":"Authentication header is empty","TraceId":"c6db91525e7964b373c617c3c8e7c476","SpanId":"e10a582a46498443","Properties":{"SourceContext":"Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication","RequestId":"0HN8U8SR8PVCV:0000001D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:04:11.4249927+01:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","TraceId":"c6db91525e7964b373c617c3c8e7c476","SpanId":"e10a582a46498443","Exception":"System.UnauthorizedAccessException: Authentication header is empty\r\n   at Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Middleware\\GokstadAthleticsBasicAuthentication.cs:line 42\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN8U8SR8PVCV:0000001D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U8SR8PVCV"}}
{"Timestamp":"2024-12-17T04:30:50.5088080+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"8cf1a8c4efc20f217e372eb4ee34f64f","SpanId":"4ae72060a92cb8ff","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSL:0000000B","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSL"}}
{"Timestamp":"2024-12-17T04:30:57.0033266+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"db2c829f96e2747b7298bd9859cb21bd","SpanId":"b2f565a4f3fb9460","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSL:0000000D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSL"}}
{"Timestamp":"2024-12-17T04:31:04.9623717+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"aa74db6a8eea7fa2e81bf6a556f9e219","SpanId":"4ea762be9a72a802","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSL:0000000F","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSL"}}
{"Timestamp":"2024-12-17T04:31:07.1845412+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"3264604f59676e50305acfe795605a55","SpanId":"3848d71a9698497b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSL:00000011","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSL"}}
{"Timestamp":"2024-12-17T04:31:08.9138972+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"8962bf8e1c6258b8c2e280999b4108e0","SpanId":"a14b3ca81ec174b4","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSL:00000013","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSL"}}
{"Timestamp":"2024-12-17T04:31:12.0663718+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"fbd569dccb784cec2b64961085bbc6ff","SpanId":"ea3ac13c6020d846","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSL:00000015","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSL"}}
{"Timestamp":"2024-12-17T04:31:52.6436750+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"c694a549c2c9bea1081b97d05ae30f6f","SpanId":"a1eafab369f9eb09","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSL:0000001F","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSL"}}
{"Timestamp":"2024-12-17T04:35:06.5012190+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"4fa98cde3ea137ffa44ec98b7aee3dc1","SpanId":"d64f9d22884669a9","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSM:00000001","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSM"}}
{"Timestamp":"2024-12-17T04:35:10.8872171+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"dc0d62c57b4ba91397f458dc9a0a0e74","SpanId":"192ff22dd4635257","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSM:00000003","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSM"}}
{"Timestamp":"2024-12-17T04:35:15.9983886+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"ed48eed795037dbc3cb70aa42acd8e24","SpanId":"d7de79c2c92cc400","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSM:00000005","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSM"}}
{"Timestamp":"2024-12-17T04:35:19.3620340+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"cf64c02bed86784f63a8c69b4e3e74a9","SpanId":"7493edc40ef11360","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSM:00000007","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSM"}}
{"Timestamp":"2024-12-17T04:35:21.7288652+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"58df8fc253517a2e281fbbfa9440c247","SpanId":"0cf643963e0b9413","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSM:00000009","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSM"}}
{"Timestamp":"2024-12-17T04:36:28.3069821+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"b20eb7324b9057d5b5348ef5dfa2bbcd","SpanId":"b0b5b169f851fb49","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSM:0000000D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSM"}}
{"Timestamp":"2024-12-17T04:36:30.6969378+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"4e1ce72edea1e60e45a08fcd1041e6fa","SpanId":"e7922b0dd111a64c","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSM:0000000F","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSM"}}
{"Timestamp":"2024-12-17T04:36:33.0899160+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"d0688849e4fa5f62691162654f1b44bb","SpanId":"10cddc48fc4acf36","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"de6bd8b4-1f1b-413c-92c1-e73d1e112e4d","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9CITJPSM:00000011","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9CITJPSM"}}
{"Timestamp":"2024-12-17T04:50:03.8229356+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"96bcfd40996694e1b7aa65bc1a0723ac","SpanId":"5c68ddf82e329208","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"b132a887-9184-4b19-a4fb-319cf81bb3fc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9NFVEP14:00000007","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9NFVEP14"}}
{"Timestamp":"2024-12-17T04:50:08.8321806+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"ea4085098439088f1c1cb07fd80489a8","SpanId":"cdb1009c7e9100d8","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"b132a887-9184-4b19-a4fb-319cf81bb3fc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9NFVEP14:00000009","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9NFVEP14"}}
{"Timestamp":"2024-12-17T04:51:46.3535512+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"ac4a54641c8a881e4d73aae18429d9d0","SpanId":"ec5169cde71eda75","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"25dca4ba-8ef4-443a-8cce-67fbaac38598","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:00000007","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:51:49.9477087+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"30db351be6ec45e71437a1453bfaa9f4","SpanId":"7623e8aff22aadec","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"25dca4ba-8ef4-443a-8cce-67fbaac38598","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:00000009","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:51:54.5009739+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"e7231efd30096d35897263c5d27ca9f5","SpanId":"f569624c6bc3f1cf","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"25dca4ba-8ef4-443a-8cce-67fbaac38598","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:0000000B","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:51:58.1965197+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"13abb3d9d96591b7bf34ba681b7f449e","SpanId":"ce90fec715d5fb83","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"25dca4ba-8ef4-443a-8cce-67fbaac38598","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:0000000D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:52:02.7566499+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"9177ccdfe56fbdc458cf68c58f7009f4","SpanId":"c76e0052345a6706","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"25dca4ba-8ef4-443a-8cce-67fbaac38598","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:0000000F","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:52:22.6172344+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"60097f24fdece8599c822906b7885e32","SpanId":"2f906bf786766ae6","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9ODPPI8A:00000011","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:52:35.8952147+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"c4b9d5e48287432cc83c4fafa47b7a4d","SpanId":"d27e4c74b9c364ee","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9ODPPI8A:00000013","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:52:36.0438633+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"c4b9d5e48287432cc83c4fafa47b7a4d","SpanId":"d27e4c74b9c364ee","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"08ba4fa6-7e0f-4510-a88c-fa1ea0d85ab9","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:00000013","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:52:36.0462297+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"c4b9d5e48287432cc83c4fafa47b7a4d","SpanId":"d27e4c74b9c364ee","Properties":{"LoggedInMemberId":"5","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"08ba4fa6-7e0f-4510-a88c-fa1ea0d85ab9","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:00000013","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:52:36.0466347+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"c4b9d5e48287432cc83c4fafa47b7a4d","SpanId":"d27e4c74b9c364ee","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"08ba4fa6-7e0f-4510-a88c-fa1ea0d85ab9","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:00000013","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:52:36.0756919+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 0, FirstName: 10/29/2026, LastName: 350","TraceId":"c4b9d5e48287432cc83c4fafa47b7a4d","SpanId":"d27e4c74b9c364ee","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"08ba4fa6-7e0f-4510-a88c-fa1ea0d85ab9","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:00000013","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:52:39.5862383+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"e98d741c78be4300a66365f27ea87365","SpanId":"754968f529887066","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"25dca4ba-8ef4-443a-8cce-67fbaac38598","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:00000015","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:52:43.6762873+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"3d8e49882567309ab2c57f249efc1b71","SpanId":"07664740d2447615","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"25dca4ba-8ef4-443a-8cce-67fbaac38598","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:00000017","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:52:51.7533257+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"ae11021c0f6a4c013e6bf9468d8bf8bc","SpanId":"588c054911cb2bc8","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"25dca4ba-8ef4-443a-8cce-67fbaac38598","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:00000019","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:53:13.6085508+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"fe2365311276941363a18383e611a907","SpanId":"35de60ca62a8f244","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9ODPPI8A:0000001B","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:53:15.9461621+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"51c89a58d6d114ff711e2f9b3b5eadf5","SpanId":"eb1a33f251ce90e9","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"25dca4ba-8ef4-443a-8cce-67fbaac38598","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:0000001D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:53:21.4131820+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"af17af6063b75c170dfcc4d9c9fc3f6c","SpanId":"778bda7a5fffc0dd","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"25dca4ba-8ef4-443a-8cce-67fbaac38598","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9ODPPI8A:0000001F","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:54:04.8093732+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"d98c7ef0808a71cd16d9d18f2d910001","SpanId":"5d2c7251433984f5","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9ODPPI8A:00000021","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9ODPPI8A"}}
{"Timestamp":"2024-12-17T04:56:16.8663433+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"82f464acd55c4f3683d0fc6a257a575e","SpanId":"e961ae5124ac68b3","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9QSO5U2T:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:56:18.2984998+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"82f464acd55c4f3683d0fc6a257a575e","SpanId":"e961ae5124ac68b3","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2T:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:56:18.3012132+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"82f464acd55c4f3683d0fc6a257a575e","SpanId":"e961ae5124ac68b3","Properties":{"LoggedInMemberId":"5","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2T:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:56:18.3017024+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"82f464acd55c4f3683d0fc6a257a575e","SpanId":"e961ae5124ac68b3","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2T:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:56:18.3419789+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 0, FirstName: 12/17/2024, LastName: 2000","TraceId":"82f464acd55c4f3683d0fc6a257a575e","SpanId":"e961ae5124ac68b3","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2T:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:56:27.5080917+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"7fa69c8beaf3f3299653ac1ae1cb7de0","SpanId":"18e4579ff1ca1825","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9QSO5U2T:00000009","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:56:27.7634614+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"7fa69c8beaf3f3299653ac1ae1cb7de0","SpanId":"18e4579ff1ca1825","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2T:00000009","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:56:27.7636355+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"7fa69c8beaf3f3299653ac1ae1cb7de0","SpanId":"18e4579ff1ca1825","Properties":{"LoggedInMemberId":"5","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2T:00000009","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:56:27.7637481+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"7fa69c8beaf3f3299653ac1ae1cb7de0","SpanId":"18e4579ff1ca1825","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2T:00000009","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:56:27.7665337+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 0, FirstName: 12/29/2024, LastName: 2000","TraceId":"7fa69c8beaf3f3299653ac1ae1cb7de0","SpanId":"18e4579ff1ca1825","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2T:00000009","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:56:46.7514857+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"eca5a3e4ae697cd98d7fb0abcd6b6ae2","SpanId":"f0e26743961b6f25","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9QSO5U2T:0000000B","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:57:10.8468732+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"d071bcbf9eae851b6c976e070c77cf93","SpanId":"54b711b9517c6cb4","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9QSO5U2T:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:57:17.3341315+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"04a16f3f6c38d250e171aacebd60cfaa","SpanId":"ade1913c0f91a555","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9QSO5U2T:0000000F","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T04:57:24.5910785+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"6f37cd4210c9b03b1eca4ad446915328","SpanId":"ad6f430d88b8b1ce","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9QSO5U2T:00000011","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2T"}}
{"Timestamp":"2024-12-17T05:00:53.8880481+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"d4dbfc7fdd2c2389c5884c8c123f9b16","SpanId":"4086521d710de38f","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9QSO5U2U:00000001","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:00:54.0105600+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"d4dbfc7fdd2c2389c5884c8c123f9b16","SpanId":"4086521d710de38f","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000001","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:00:54.0107093+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"d4dbfc7fdd2c2389c5884c8c123f9b16","SpanId":"4086521d710de38f","Properties":{"LoggedInMemberId":"5","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000001","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:00:54.0107991+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"d4dbfc7fdd2c2389c5884c8c123f9b16","SpanId":"4086521d710de38f","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000001","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:00:54.0135002+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 0, FirstName: 05/25/2024, LastName: 2000","TraceId":"d4dbfc7fdd2c2389c5884c8c123f9b16","SpanId":"4086521d710de38f","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000001","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:01:53.7778240+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"15995d3d0443c41b95cddb009646dc0c","SpanId":"a954387a8f9c6d52","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000005","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:01:59.0688226+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"a92d30035190c28a9ebdcf1827eca2d1","SpanId":"259b78f25e047c8e","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000007","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:02:01.8103335+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"8ef8ce296b249d54213c9a6cc763b297","SpanId":"f51780bd6d888786","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000009","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:02:07.0753989+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"6bd3406198ae2025806d31d89eb9c44c","SpanId":"e3206977b06ab8cb","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000000B","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:02:12.0651149+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"f63bb8136d59aac40a71d325f946da73","SpanId":"e33d6e1860d9a74a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000000D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:02:15.4938094+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"ad049b2fc2ebf4e782100ffda4506f4d","SpanId":"3cf81efcb4b81a59","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000000F","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:02:17.5359570+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"9c57d5f68a5589be0ca86a23bfba95f2","SpanId":"2618f7eaabc10a13","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000011","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:02:21.2600862+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"5b133d80c98aa951ed202fd008b3b6d4","SpanId":"5370a93d4b6e5dba","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000013","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:02:29.0214657+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"1403580960aeeebda7a723796e29967d","SpanId":"28ea1788ae7c4af4","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000017","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:02:32.3342787+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"c07c186b64f343d6d65cb9cd7ec87ed8","SpanId":"43671c96c1d7cdf3","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000019","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:03:21.3256529+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"7d90d05e208e6abeb580c46857082fb7","SpanId":"4ac7d7d5a79649fb","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8U9QSO5U2U:0000001B","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:03:21.4492897+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"7d90d05e208e6abeb580c46857082fb7","SpanId":"4ac7d7d5a79649fb","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000001B","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:03:21.4494085+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"7d90d05e208e6abeb580c46857082fb7","SpanId":"4ac7d7d5a79649fb","Properties":{"LoggedInMemberId":"5","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000001B","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:03:21.4494786+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"7d90d05e208e6abeb580c46857082fb7","SpanId":"4ac7d7d5a79649fb","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000001B","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:03:21.4520789+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 0, FirstName: 05/05/2024, LastName: 2000","TraceId":"7d90d05e208e6abeb580c46857082fb7","SpanId":"4ac7d7d5a79649fb","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"eeb31259-85da-4527-aae6-5def3891d6a5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000001B","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:03:25.7483893+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"c13b42f4641fcd3b8cef7d564713fae5","SpanId":"799797b2a8004b3b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000001D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:03:30.4952622+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"9d0a542922ebaf14fcec1be2c2b71345","SpanId":"3f22a382d6f18470","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000001F","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:03:44.3914230+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"c8a98c0560ea341b0bcc8710243ad4fd","SpanId":"bf7bf9a09ae7b702","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000021","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:06:14.6377850+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"dd49cfbb7498ee592f8711d3d9df17a2","SpanId":"00d730441c48c3f6","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000025","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:06:18.6796683+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"644aecece338db48ff59f5205c09ef2b","SpanId":"3840ec3cb5fcb20c","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000027","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:06:23.1128096+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"5b5706c03adb5d847921e57263284f65","SpanId":"cf55f78e087ecd34","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:00000029","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:06:27.9865175+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"b0c9b718d983a0ad925f80a0bc8abb39","SpanId":"eeed0f67c21fc8ae","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000002B","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:06:31.4558653+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"bb73ec73cd83d43142f460c8a15f3b02","SpanId":"796bead81e144fe2","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"44eb6493-fdcc-4f08-b2c7-4f0c724cecdb","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8U9QSO5U2U:0000002D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8U9QSO5U2U"}}
{"Timestamp":"2024-12-17T05:07:42.4473944+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"552ce67cbdcf638311f312c117eaf445","SpanId":"93a41a4cbefdef3d","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"957692d5-5ea3-4b86-b8f5-990a5b359236","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8UA1ASHO4E:00000009","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8UA1ASHO4E"}}
{"Timestamp":"2024-12-17T05:07:47.6090214+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"9304a685c7a8a7e6e113975494ee6a91","SpanId":"5a40eee988b62741","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"957692d5-5ea3-4b86-b8f5-990a5b359236","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8UA1ASHO4E:0000000B","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8UA1ASHO4E"}}
{"Timestamp":"2024-12-17T05:07:53.5568912+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"d9c35804eebf4f94d77666284428ba92","SpanId":"fb8b9ee2eb6b89ee","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"957692d5-5ea3-4b86-b8f5-990a5b359236","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8UA1ASHO4E:0000000D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8UA1ASHO4E"}}
{"Timestamp":"2024-12-17T05:07:58.7287585+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"3b068b36c1e4a63dfd0721e4d8542e96","SpanId":"8cdd353023ac2f34","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"957692d5-5ea3-4b86-b8f5-990a5b359236","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8UA1ASHO4E:0000000F","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8UA1ASHO4E"}}
{"Timestamp":"2024-12-17T05:08:34.9934751+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"08a61f24f46f122683591f624c50b05f","SpanId":"1042843ab5b20c35","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"957692d5-5ea3-4b86-b8f5-990a5b359236","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8UA1ASHO4E:00000013","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8UA1ASHO4E"}}
{"Timestamp":"2024-12-17T05:08:48.6957753+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"135bd16b5ca6ad18a1f8d054be606533","SpanId":"06bbea99ba6c048d","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"957692d5-5ea3-4b86-b8f5-990a5b359236","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8UA1ASHO4E:00000015","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8UA1ASHO4E"}}
{"Timestamp":"2024-12-17T05:08:51.2839004+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"e797ee429dbf0fab7ecd992d64193207","SpanId":"fdb791c78f218d42","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"957692d5-5ea3-4b86-b8f5-990a5b359236","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8UA1ASHO4E:00000017","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8UA1ASHO4E"}}
{"Timestamp":"2024-12-17T05:08:53.8671268+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"3af5d6623c53dea0923fbd3d76fb6769","SpanId":"633d6ee1a3725f3d","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"957692d5-5ea3-4b86-b8f5-990a5b359236","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8UA1ASHO4E:00000019","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8UA1ASHO4E"}}
{"Timestamp":"2024-12-17T05:08:58.9546775+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"dc4b1e407fd047e43eae443dbe790082","SpanId":"c5731980f8deb967","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"957692d5-5ea3-4b86-b8f5-990a5b359236","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8UA1ASHO4E:0000001B","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8UA1ASHO4E"}}
{"Timestamp":"2024-12-17T05:09:00.9238295+01:00","Level":"Information","MessageTemplate":"Trying to find: r => ((((((Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId.HasValue) OrElse (Convert(r.RaceId, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.RaceId)) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date.HasValue) OrElse (Convert(r.Date, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Date))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year.HasValue) OrElse (Convert(r.Date.Year, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Year))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month.HasValue) OrElse (Convert(r.Date.Month, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Month))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day.HasValue) OrElse (Convert(r.Date.Day, Nullable`1) == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Day))) AndAlso (Not(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.HasValue) OrElse r.Distance.ToString().Contains(value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass12_0).searchParams.Distance.Value.ToString()))) in race.","TraceId":"49bfc5f299532260c889538f7b3c18ca","SpanId":"6733d263f9546322","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"957692d5-5ea3-4b86-b8f5-990a5b359236","ActionName":"Emne7_Eksamen.Features.Races.RaceController.GetRacesAsync (Emne7_Eksamen)","RequestId":"0HN8UA1ASHO4E:0000001D","RequestPath":"/api/v1/races/GetRaces","ConnectionId":"0HN8UA1ASHO4E"}}
{"Timestamp":"2024-12-17T20:01:55.8840439+01:00","Level":"Error","MessageTemplate":"An error occurred using the connection to database '{database}' on server '{server}'.","Properties":{"database":"","server":"localhost","EventId":{"Id":20004,"Name":"Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Connection"}}
{"Timestamp":"2024-12-17T20:02:29.3449909+01:00","Level":"Error","MessageTemplate":"Failed executing DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE `Member` (\r\n    `MemberId` int NOT NULL AUTO_INCREMENT,\r\n    `FirstName` varchar(30) CHARACTER SET utf8mb4 NOT NULL,\r\n    `LastName` varchar(50) CHARACTER SET utf8mb4 NOT NULL,\r\n    `Gender` varchar(1) CHARACTER SET utf8mb4 NOT NULL,\r\n    `BirthYear` smallint NOT NULL,\r\n    `Created` DATE NOT NULL,\r\n    `Updated` DATE NOT NULL,\r\n    `HashedPassword` LONGTEXT CHARACTER SET utf8mb4 NOT NULL,\r\n    CONSTRAINT `PK_Member` PRIMARY KEY (`MemberId`)\r\n) CHARACTER SET=utf8mb4;","EventId":{"Id":20102,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2024-12-17T20:07:49.1494227+01:00","Level":"Information","MessageTemplate":"Adding new member with Id: 0, FirstName: test, LastName: test,Gender: m, BirthYear: 1997,Created: 12/17/2024 19:07:48, Updated: 12/17/2024 19:07:48","TraceId":"546aa5132976f1ed1ad44b9aa3b79ed4","SpanId":"c200249de0969805","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"2bf22f9a-d839-4fc9-86ef-8523df8ef8ab","ActionName":"Emne7_Eksamen.Features.Members.MemberController.RegisterMemberAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:0000000B","RequestPath":"/api/v1/members/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:11.7483551+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"a6171f43b19dbd2bde4405cbb80a185f","SpanId":"a24c9453c21603fa","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8UPNUHNO8G:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:11.9378213+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"a6171f43b19dbd2bde4405cbb80a185f","SpanId":"a24c9453c21603fa","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:11.9403169+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"a6171f43b19dbd2bde4405cbb80a185f","SpanId":"a24c9453c21603fa","Properties":{"LoggedInMemberId":"1","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:11.9408098+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"a6171f43b19dbd2bde4405cbb80a185f","SpanId":"a24c9453c21603fa","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:11.9713588+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 0, FirstName: 12/28/2024, LastName: 500","TraceId":"a6171f43b19dbd2bde4405cbb80a185f","SpanId":"a24c9453c21603fa","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:23.0311404+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"8fe410d19a925c84dccedf96a89a4a7b","SpanId":"a94d56bdb5e59470","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8UPNUHNO8G:0000000F","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:23.1538899+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"8fe410d19a925c84dccedf96a89a4a7b","SpanId":"a94d56bdb5e59470","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:0000000F","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:23.1540163+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"8fe410d19a925c84dccedf96a89a4a7b","SpanId":"a94d56bdb5e59470","Properties":{"LoggedInMemberId":"1","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:0000000F","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:23.1541004+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"8fe410d19a925c84dccedf96a89a4a7b","SpanId":"a94d56bdb5e59470","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:0000000F","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:23.1568916+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 0, FirstName: 12/29/2024, LastName: 100","TraceId":"8fe410d19a925c84dccedf96a89a4a7b","SpanId":"a94d56bdb5e59470","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:0000000F","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:40.9594997+01:00","Level":"Information","MessageTemplate":"Adding new member with Id: 0, FirstName: jonas, LastName: hellum,Gender: m, BirthYear: 1997,Created: 12/17/2024 19:08:40, Updated: 12/17/2024 19:08:40","TraceId":"d4c572a51e2e2f709b6d6283000544da","SpanId":"8e97d342e0c5599a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"2bf22f9a-d839-4fc9-86ef-8523df8ef8ab","ActionName":"Emne7_Eksamen.Features.Members.MemberController.RegisterMemberAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:00000011","RequestPath":"/api/v1/members/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:56.2165070+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"2355e5fa9a9d9b09d75a255e099ffb6c","SpanId":"f6e4888b16f39abb","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8UPNUHNO8G:00000013","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:56.3357330+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"2355e5fa9a9d9b09d75a255e099ffb6c","SpanId":"f6e4888b16f39abb","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:00000013","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:56.3358512+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"2355e5fa9a9d9b09d75a255e099ffb6c","SpanId":"f6e4888b16f39abb","Properties":{"LoggedInMemberId":"2","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:00000013","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:56.3359240+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"2355e5fa9a9d9b09d75a255e099ffb6c","SpanId":"f6e4888b16f39abb","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:00000013","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:08:56.3381281+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 0, FirstName: 12/29/2025, LastName: 100","TraceId":"2355e5fa9a9d9b09d75a255e099ffb6c","SpanId":"f6e4888b16f39abb","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"d6b4e1ea-0080-44bd-b655-68d9f9f99786","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPNUHNO8G:00000013","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPNUHNO8G"}}
{"Timestamp":"2024-12-17T20:14:02.4210447+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"d28487042ff8518284bcb9530a97bbcb","SpanId":"d28b3d8e7d8847b2","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8UPRK2G3Q1:00000009","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:02.7533497+01:00","Level":"Information","MessageTemplate":"Deleting race with id: 3","TraceId":"d28487042ff8518284bcb9530a97bbcb","SpanId":"d28b3d8e7d8847b2","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceController","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000009","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:02.7556345+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"d28487042ff8518284bcb9530a97bbcb","SpanId":"d28b3d8e7d8847b2","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000009","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:02.7594131+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"d28487042ff8518284bcb9530a97bbcb","SpanId":"d28b3d8e7d8847b2","Properties":{"LoggedInMemberId":"1","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000009","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:02.7603702+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"d28487042ff8518284bcb9530a97bbcb","SpanId":"d28b3d8e7d8847b2","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000009","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:02.7891163+01:00","Level":"Information","MessageTemplate":"Trying to find race to delete by id: 3","TraceId":"d28487042ff8518284bcb9530a97bbcb","SpanId":"d28b3d8e7d8847b2","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000009","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:02.7902166+01:00","Level":"Information","MessageTemplate":"Getting race from id: 3","TraceId":"d28487042ff8518284bcb9530a97bbcb","SpanId":"d28b3d8e7d8847b2","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000009","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:02.8003278+01:00","Level":"Information","MessageTemplate":"Checking if member with id: 1 is authorized to delete race with id: 3 based on 2","TraceId":"d28487042ff8518284bcb9530a97bbcb","SpanId":"d28b3d8e7d8847b2","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000009","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:02.8005364+01:00","Level":"Warning","MessageTemplate":"Member with id: 1 is not authorized to delete race with id: 3","TraceId":"d28487042ff8518284bcb9530a97bbcb","SpanId":"d28b3d8e7d8847b2","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000009","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:02.8073179+01:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","TraceId":"d28487042ff8518284bcb9530a97bbcb","SpanId":"d28b3d8e7d8847b2","Exception":"System.UnauthorizedAccessException: Member with id: 1 is not authorized to delete race with id: 3\r\n   at Emne7_Eksamen.Features.Races.RaceService.DeleteByIdAsync(Int32 raceId) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Features\\Races\\RaceService.cs:line 61\r\n   at Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync(Int32 raceId) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Features\\Races\\RaceController.cs:line 67\r\n   at lambda_method99(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Middleware\\GokstadAthleticsBasicAuthentication.cs:line 103\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN8UPRK2G3Q1:00000009","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.6392657+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.9255692+01:00","Level":"Information","MessageTemplate":"Deleting race with id: 2","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceController","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.9257106+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.9257964+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"LoggedInMemberId":"1","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.9258914+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.9288574+01:00","Level":"Information","MessageTemplate":"Trying to find race to delete by id: 2","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.9290293+01:00","Level":"Information","MessageTemplate":"Getting race from id: 2","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.9449705+01:00","Level":"Information","MessageTemplate":"Checking if member with id: 1 is authorized to delete race with id: 2 based on 1","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.9450525+01:00","Level":"Information","MessageTemplate":"Deleting race with id: 2","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.9458395+01:00","Level":"Information","MessageTemplate":"Trying to find race based on id: 2","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:26.9496711+01:00","Level":"Information","MessageTemplate":"Deleting race based on id: 2","TraceId":"b07bbdab73ea1ef3392110402013fdcb","SpanId":"a272b09c943f9186","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"c54bdb76-45f9-46a3-bb4e-57ff59c4abbc","ActionName":"Emne7_Eksamen.Features.Races.RaceController.DeleteRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000B","RequestPath":"/api/v1/races/2","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:44.0842469+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"f13bc0bc939bee6359b3458f7758f1b6","SpanId":"6ea3d80b5b98cee1","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8UPRK2G3Q1:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:44.2333696+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"f13bc0bc939bee6359b3458f7758f1b6","SpanId":"6ea3d80b5b98cee1","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"76e1f82f-a359-4ba3-89a9-1c72d1b0c8c5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:44.2334455+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"f13bc0bc939bee6359b3458f7758f1b6","SpanId":"6ea3d80b5b98cee1","Properties":{"LoggedInMemberId":"1","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"76e1f82f-a359-4ba3-89a9-1c72d1b0c8c5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:44.2335201+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"f13bc0bc939bee6359b3458f7758f1b6","SpanId":"6ea3d80b5b98cee1","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"76e1f82f-a359-4ba3-89a9-1c72d1b0c8c5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:14:44.2388898+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 0, FirstName: 12/17/2026, LastName: 0","TraceId":"f13bc0bc939bee6359b3458f7758f1b6","SpanId":"6ea3d80b5b98cee1","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"76e1f82f-a359-4ba3-89a9-1c72d1b0c8c5","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000D","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:17.8575697+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"d46e84a48989bb23a13cc61a7d2e055c","SpanId":"d64aacf873378468","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8UPRK2G3Q1:0000000F","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:17.9831387+01:00","Level":"Information","MessageTemplate":"Updating race: 3","TraceId":"d46e84a48989bb23a13cc61a7d2e055c","SpanId":"d64aacf873378468","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceController","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000F","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:17.9844278+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"d46e84a48989bb23a13cc61a7d2e055c","SpanId":"d64aacf873378468","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000F","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:17.9844787+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"d46e84a48989bb23a13cc61a7d2e055c","SpanId":"d64aacf873378468","Properties":{"LoggedInMemberId":"1","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000F","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:17.9845532+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"d46e84a48989bb23a13cc61a7d2e055c","SpanId":"d64aacf873378468","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000F","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:17.9873892+01:00","Level":"Information","MessageTemplate":"Trying to find race to delete by id: 3","TraceId":"d46e84a48989bb23a13cc61a7d2e055c","SpanId":"d64aacf873378468","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000F","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:17.9874516+01:00","Level":"Information","MessageTemplate":"Getting race from id: 3","TraceId":"d46e84a48989bb23a13cc61a7d2e055c","SpanId":"d64aacf873378468","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000F","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:17.9896907+01:00","Level":"Information","MessageTemplate":"Checking if member with id: 1 is authorized to update race with id: 3 based on 2","TraceId":"d46e84a48989bb23a13cc61a7d2e055c","SpanId":"d64aacf873378468","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000F","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:17.9897373+01:00","Level":"Warning","MessageTemplate":"Member with id: 1 is not authorized to update race with id: 3","TraceId":"d46e84a48989bb23a13cc61a7d2e055c","SpanId":"d64aacf873378468","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:0000000F","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:17.9910845+01:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","TraceId":"d46e84a48989bb23a13cc61a7d2e055c","SpanId":"d64aacf873378468","Exception":"System.UnauthorizedAccessException: Member with id: 1 is not authorized to update race with id: 3\r\n   at Emne7_Eksamen.Features.Races.RaceService.UpdateAsync(Int32 raceId, RaceUpdateDTO updateDTO) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Features\\Races\\RaceService.cs:line 140\r\n   at Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync(Int32 raceId, RaceUpdateDTO raceDTO) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Features\\Races\\RaceController.cs:line 56\r\n   at lambda_method206(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Middleware\\GokstadAthleticsBasicAuthentication.cs:line 103\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN8UPRK2G3Q1:0000000F","RequestPath":"/api/v1/races/3","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.2780968+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.3991260+01:00","Level":"Information","MessageTemplate":"Updating race: 4","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceController","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.3991929+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.3992098+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"LoggedInMemberId":"1","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.3992685+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.4019082+01:00","Level":"Information","MessageTemplate":"Trying to find race to delete by id: 4","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.4019420+01:00","Level":"Information","MessageTemplate":"Getting race from id: 4","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.4043799+01:00","Level":"Information","MessageTemplate":"Checking if member with id: 1 is authorized to update race with id: 4 based on 1","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.4044598+01:00","Level":"Information","MessageTemplate":"Updating race with id: 4 with current calues: from: 12/17/2026 to: 12/25/2026 from: 0 to: 10","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.4055225+01:00","Level":"Information","MessageTemplate":"Trying to find race based on id: 4","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:15:33.4098655+01:00","Level":"Information","MessageTemplate":"Updating member based on id: 4","TraceId":"8df4d39da24550880c30de0af5faa1b5","SpanId":"17a8c7729f528c7b","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"cc57f2cd-37ac-47ab-944b-118a19d4b056","ActionName":"Emne7_Eksamen.Features.Races.RaceController.UpdateRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UPRK2G3Q1:00000011","RequestPath":"/api/v1/races/4","ConnectionId":"0HN8UPRK2G3Q1"}}
{"Timestamp":"2024-12-17T20:21:52.4659176+01:00","Level":"Information","MessageTemplate":"Trying to find: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"49f1bb04a3b6fccddee5d32915929c0a","SpanId":"8465bcfa1f6269f1","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8UQ00VHNL0:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UQ00VHNL0"}}
{"Timestamp":"2024-12-17T20:21:53.8410012+01:00","Level":"Information","MessageTemplate":"Trying to find logged in member.","TraceId":"49f1bb04a3b6fccddee5d32915929c0a","SpanId":"8465bcfa1f6269f1","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"9ff599ba-2b05-4607-9984-655c99b28aec","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UQ00VHNL0:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UQ00VHNL0"}}
{"Timestamp":"2024-12-17T20:21:53.8439297+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"49f1bb04a3b6fccddee5d32915929c0a","SpanId":"8465bcfa1f6269f1","Properties":{"LoggedInMemberId":"2","SourceContext":"Emne7_Eksamen.Features.Races.RaceService","ActionId":"9ff599ba-2b05-4607-9984-655c99b28aec","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UQ00VHNL0:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UQ00VHNL0"}}
{"Timestamp":"2024-12-17T20:21:53.8443310+01:00","Level":"Information","MessageTemplate":"Trying to find: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Races.RaceService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"49f1bb04a3b6fccddee5d32915929c0a","SpanId":"8465bcfa1f6269f1","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"9ff599ba-2b05-4607-9984-655c99b28aec","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UQ00VHNL0:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UQ00VHNL0"}}
{"Timestamp":"2024-12-17T20:21:54.0783638+01:00","Level":"Information","MessageTemplate":"Adding new race with Id: 5, Date: 05/29/2025, Distance: 250","TraceId":"49f1bb04a3b6fccddee5d32915929c0a","SpanId":"8465bcfa1f6269f1","Properties":{"SourceContext":"Emne7_Eksamen.Features.Races.RaceRepository","ActionId":"9ff599ba-2b05-4607-9984-655c99b28aec","ActionName":"Emne7_Eksamen.Features.Races.RaceController.RegisterRaceAsync (Emne7_Eksamen)","RequestId":"0HN8UQ00VHNL0:00000007","RequestPath":"/api/v1/races/Register","ConnectionId":"0HN8UQ00VHNL0"}}
{"Timestamp":"2024-12-17T21:55:24.6405755+01:00","Level":"Warning","MessageTemplate":"Authentication header is empty","TraceId":"43d40cff5ebed1e4f10322e703c18eee","SpanId":"3e0ea828b52475f5","Properties":{"SourceContext":"Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication","RequestId":"0HN8URKF4784O:00000007","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:55:24.6676292+01:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","TraceId":"43d40cff5ebed1e4f10322e703c18eee","SpanId":"3e0ea828b52475f5","Exception":"System.UnauthorizedAccessException: Authentication header is empty\r\n   at Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Middleware\\GokstadAthleticsBasicAuthentication.cs:line 42\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN8URKF4784O:00000007","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:55:30.6966606+01:00","Level":"Information","MessageTemplate":"Finding: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"bfc41bc96a34979bb47953e9039c39fb","SpanId":"3a131730090f6766","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8URKF4784O:00000009","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:55:31.9727175+01:00","Level":"Information","MessageTemplate":"Member has entered correct password.","TraceId":"bfc41bc96a34979bb47953e9039c39fb","SpanId":"3a131730090f6766","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","RequestId":"0HN8URKF4784O:00000009","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:55:32.0049518+01:00","Level":"Information","MessageTemplate":"Doing a get on members with page number: 1 and page size: 10","TraceId":"bfc41bc96a34979bb47953e9039c39fb","SpanId":"3a131730090f6766","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberController","ActionId":"11afd348-a045-4b05-a104-a3813298eb47","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URKF4784O:00000009","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:55:32.0058349+01:00","Level":"Information","MessageTemplate":"Getting paged members with page number: 1 and page size: 10","TraceId":"bfc41bc96a34979bb47953e9039c39fb","SpanId":"3a131730090f6766","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","ActionId":"11afd348-a045-4b05-a104-a3813298eb47","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URKF4784O:00000009","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:55:32.0067146+01:00","Level":"Information","MessageTemplate":"Getting paged members from page: 1 with size: 10","TraceId":"bfc41bc96a34979bb47953e9039c39fb","SpanId":"3a131730090f6766","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"11afd348-a045-4b05-a104-a3813298eb47","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URKF4784O:00000009","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:56:40.6682950+01:00","Level":"Information","MessageTemplate":"Finding: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"1fd0fc07b989adc5daa128b1a1bbd499","SpanId":"b1b2ec31e1d7b222","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8URKF4784O:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:56:40.9148232+01:00","Level":"Information","MessageTemplate":"Member has entered correct password.","TraceId":"1fd0fc07b989adc5daa128b1a1bbd499","SpanId":"b1b2ec31e1d7b222","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","RequestId":"0HN8URKF4784O:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:56:40.9160345+01:00","Level":"Information","MessageTemplate":"Doing a filtered get on members based on criteria: Emne7_Eksamen.Features.Members.Models.MemberSearchParams","TraceId":"1fd0fc07b989adc5daa128b1a1bbd499","SpanId":"b1b2ec31e1d7b222","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberController","ActionId":"11afd348-a045-4b05-a104-a3813298eb47","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URKF4784O:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:56:40.9197741+01:00","Level":"Information","MessageTemplate":"Logged in member ID: {LoggedInMemberId}","TraceId":"1fd0fc07b989adc5daa128b1a1bbd499","SpanId":"b1b2ec31e1d7b222","Properties":{"LoggedInMemberId":"1","SourceContext":"Emne7_Eksamen.Features.Members.MemberService","ActionId":"11afd348-a045-4b05-a104-a3813298eb47","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URKF4784O:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:56:40.9202284+01:00","Level":"Information","MessageTemplate":"Finding: m => (m.MemberId.ToString() == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass13_0).loggedInMemberId) in Member.","TraceId":"1fd0fc07b989adc5daa128b1a1bbd499","SpanId":"b1b2ec31e1d7b222","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"11afd348-a045-4b05-a104-a3813298eb47","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URKF4784O:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:56:40.9502894+01:00","Level":"Debug","MessageTemplate":"Searching for members with: Emne7_Eksamen.Features.Members.Models.MemberSearchParams","TraceId":"1fd0fc07b989adc5daa128b1a1bbd499","SpanId":"b1b2ec31e1d7b222","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","ActionId":"11afd348-a045-4b05-a104-a3813298eb47","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URKF4784O:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:56:40.9505416+01:00","Level":"Information","MessageTemplate":"Finding: m => (((Not(value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.MemberId.HasValue) OrElse (Convert(m.MemberId, Nullable`1) == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.MemberId)) AndAlso (IsNullOrEmpty(value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.FirstName) OrElse m.FirstName.Contains(value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.FirstName))) AndAlso (IsNullOrEmpty(value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.LastName) OrElse m.LastName.Contains(value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.LastName))) in Member.","TraceId":"1fd0fc07b989adc5daa128b1a1bbd499","SpanId":"b1b2ec31e1d7b222","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"11afd348-a045-4b05-a104-a3813298eb47","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URKF4784O:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URKF4784O"}}
{"Timestamp":"2024-12-17T21:57:30.7975194+01:00","Level":"Warning","MessageTemplate":"Authentication header is empty","TraceId":"fc17873756062b1dc3f088e71fd6e38d","SpanId":"694b517587f16332","Properties":{"SourceContext":"Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication","RequestId":"0HN8URLKTSQ5S:00000007","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:30.8251743+01:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","TraceId":"fc17873756062b1dc3f088e71fd6e38d","SpanId":"694b517587f16332","Exception":"System.UnauthorizedAccessException: Authentication header is empty\r\n   at Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Middleware\\GokstadAthleticsBasicAuthentication.cs:line 42\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN8URLKTSQ5S:00000007","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:39.6390097+01:00","Level":"Warning","MessageTemplate":"Authentication header is empty","TraceId":"9d592a3918bcf45d230d467d34efd073","SpanId":"daf5765531756bd8","Properties":{"SourceContext":"Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication","RequestId":"0HN8URLKTSQ5S:00000009","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:39.6398558+01:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","TraceId":"9d592a3918bcf45d230d467d34efd073","SpanId":"daf5765531756bd8","Exception":"System.UnauthorizedAccessException: Authentication header is empty\r\n   at Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Middleware\\GokstadAthleticsBasicAuthentication.cs:line 42\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN8URLKTSQ5S:00000009","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:44.6534856+01:00","Level":"Information","MessageTemplate":"Finding: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"19f705e3dd803aa210a9133de1b238d4","SpanId":"5312c8b842118a0c","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8URLKTSQ5S:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:45.9325564+01:00","Level":"Information","MessageTemplate":"Member has entered correct password.","TraceId":"19f705e3dd803aa210a9133de1b238d4","SpanId":"5312c8b842118a0c","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","RequestId":"0HN8URLKTSQ5S:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:45.9662825+01:00","Level":"Information","MessageTemplate":"Doing a filtered get on members based on criteria: Emne7_Eksamen.Features.Members.Models.MemberSearchParams","TraceId":"19f705e3dd803aa210a9133de1b238d4","SpanId":"5312c8b842118a0c","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberController","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:45.9678447+01:00","Level":"Debug","MessageTemplate":"Searching for members with: Emne7_Eksamen.Features.Members.Models.MemberSearchParams","TraceId":"19f705e3dd803aa210a9133de1b238d4","SpanId":"5312c8b842118a0c","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:45.9681342+01:00","Level":"Information","MessageTemplate":"Finding: m => (((Not(value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.MemberId.HasValue) OrElse (Convert(m.MemberId, Nullable`1) == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.MemberId)) AndAlso (IsNullOrEmpty(value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.FirstName) OrElse m.FirstName.Contains(value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.FirstName))) AndAlso (IsNullOrEmpty(value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.LastName) OrElse m.LastName.Contains(value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass11_0).searchParams.LastName))) in Member.","TraceId":"19f705e3dd803aa210a9133de1b238d4","SpanId":"5312c8b842118a0c","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:0000000B","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:49.7705636+01:00","Level":"Information","MessageTemplate":"Finding: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"fe81388832be91ef3956eda34abb8d25","SpanId":"5dbf1147caeb5ab6","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8URLKTSQ5S:0000000D","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:50.0429243+01:00","Level":"Information","MessageTemplate":"Member has entered correct password.","TraceId":"fe81388832be91ef3956eda34abb8d25","SpanId":"5dbf1147caeb5ab6","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","RequestId":"0HN8URLKTSQ5S:0000000D","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:50.0438504+01:00","Level":"Information","MessageTemplate":"Doing a get on members with page number: 1 and page size: 10","TraceId":"fe81388832be91ef3956eda34abb8d25","SpanId":"5dbf1147caeb5ab6","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberController","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:0000000D","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:50.0447252+01:00","Level":"Information","MessageTemplate":"Getting paged members with page number: 1 and page size: 10","TraceId":"fe81388832be91ef3956eda34abb8d25","SpanId":"5dbf1147caeb5ab6","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:0000000D","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:50.0455129+01:00","Level":"Information","MessageTemplate":"Getting paged members from page: 1 with size: 10","TraceId":"fe81388832be91ef3956eda34abb8d25","SpanId":"5dbf1147caeb5ab6","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:0000000D","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:54.4367025+01:00","Level":"Warning","MessageTemplate":"Authentication header is empty","TraceId":"c08da5e754a1169e6c79a82edf0492dc","SpanId":"35b1bb550a145e81","Properties":{"SourceContext":"Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication","RequestId":"0HN8URLKTSQ5S:0000000F","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:54.4371120+01:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","TraceId":"c08da5e754a1169e6c79a82edf0492dc","SpanId":"35b1bb550a145e81","Exception":"System.UnauthorizedAccessException: Authentication header is empty\r\n   at Emne7_Eksamen.Middleware.GokstadAthleticsBasicAuthentication.InvokeAsync(HttpContext context, RequestDelegate next) in C:\\Users\\Jonas\\RiderProjects\\Emne7\\Emne7_Eksamen\\Emne7_Eksamen\\Middleware\\GokstadAthleticsBasicAuthentication.cs:line 42\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN8URLKTSQ5S:0000000F","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:57:59.8832031+01:00","Level":"Information","MessageTemplate":"Finding: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"8f7d3036024f30a9e145ca12b2862664","SpanId":"244a06537cc6257a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8URLKTSQ5S:00000011","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:58:00.0440532+01:00","Level":"Information","MessageTemplate":"Member has entered correct password.","TraceId":"8f7d3036024f30a9e145ca12b2862664","SpanId":"244a06537cc6257a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","RequestId":"0HN8URLKTSQ5S:00000011","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:58:00.0444382+01:00","Level":"Information","MessageTemplate":"Doing a get on members with page number: 1 and page size: 10","TraceId":"8f7d3036024f30a9e145ca12b2862664","SpanId":"244a06537cc6257a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberController","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:00000011","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:58:00.0445298+01:00","Level":"Information","MessageTemplate":"Getting paged members with page number: 1 and page size: 10","TraceId":"8f7d3036024f30a9e145ca12b2862664","SpanId":"244a06537cc6257a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:00000011","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:58:00.0445596+01:00","Level":"Information","MessageTemplate":"Getting paged members from page: 1 with size: 10","TraceId":"8f7d3036024f30a9e145ca12b2862664","SpanId":"244a06537cc6257a","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:00000011","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:58:00.1098457+01:00","Level":"Information","MessageTemplate":"Finding: member => (member.MemberId == value(Emne7_Eksamen.Features.Members.MemberService+<>c__DisplayClass12_0).memberId) in Member.","TraceId":"8ac92e3360d3b596c87429323eabb72b","SpanId":"096c422408a9f543","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","RequestId":"0HN8URLKTSQ5S:00000013","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:58:00.2289961+01:00","Level":"Information","MessageTemplate":"Member has entered correct password.","TraceId":"8ac92e3360d3b596c87429323eabb72b","SpanId":"096c422408a9f543","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","RequestId":"0HN8URLKTSQ5S:00000013","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:58:00.2295507+01:00","Level":"Information","MessageTemplate":"Doing a get on members with page number: 1 and page size: 10","TraceId":"8ac92e3360d3b596c87429323eabb72b","SpanId":"096c422408a9f543","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberController","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:00000013","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:58:00.2296006+01:00","Level":"Information","MessageTemplate":"Getting paged members with page number: 1 and page size: 10","TraceId":"8ac92e3360d3b596c87429323eabb72b","SpanId":"096c422408a9f543","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberService","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:00000013","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
{"Timestamp":"2024-12-17T21:58:00.2296716+01:00","Level":"Information","MessageTemplate":"Getting paged members from page: 1 with size: 10","TraceId":"8ac92e3360d3b596c87429323eabb72b","SpanId":"096c422408a9f543","Properties":{"SourceContext":"Emne7_Eksamen.Features.Members.MemberRepository","ActionId":"32cfd65d-fdbd-4777-aaf9-5c45a670268e","ActionName":"Emne7_Eksamen.Features.Members.MemberController.GetMembersAsync (Emne7_Eksamen)","RequestId":"0HN8URLKTSQ5S:00000013","RequestPath":"/api/v1/members/GetMembers","ConnectionId":"0HN8URLKTSQ5S"}}
