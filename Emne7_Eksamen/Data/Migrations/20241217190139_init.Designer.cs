// <auto-generated />
using System;
using Emne7_Eksamen.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Emne7_Eksamen.Data.Migrations
{
    [DbContext(typeof(GokstadAthleticsDbContext))]
    [Migration("20241217190139_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Emne7_Eksamen.Features.Members.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<short>("BirthYear")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("DATE");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("DATE");

                    b.HasKey("MemberId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Emne7_Eksamen.Features.Races.Race", b =>
                {
                    b.Property<int>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RaceId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("DATE");

                    b.Property<short>("Distance")
                        .HasColumnType("smallint");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("RaceId");

                    b.HasIndex("MemberId");

                    b.ToTable("Race");
                });

            modelBuilder.Entity("Emne7_Eksamen.Features.Results.Result", b =>
                {
                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<float?>("Time")
                        .HasColumnType("float");

                    b.HasKey("RaceId", "MemberId");

                    b.HasIndex("MemberId");

                    b.ToTable("Result");
                });

            modelBuilder.Entity("Emne7_Eksamen.Features.Races.Race", b =>
                {
                    b.HasOne("Emne7_Eksamen.Features.Members.Models.Member", "Member")
                        .WithMany("Races")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Emne7_Eksamen.Features.Results.Result", b =>
                {
                    b.HasOne("Emne7_Eksamen.Features.Members.Models.Member", "Member")
                        .WithMany("Results")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emne7_Eksamen.Features.Races.Race", "Race")
                        .WithMany("Results")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("Emne7_Eksamen.Features.Members.Models.Member", b =>
                {
                    b.Navigation("Races");

                    b.Navigation("Results");
                });

            modelBuilder.Entity("Emne7_Eksamen.Features.Races.Race", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
